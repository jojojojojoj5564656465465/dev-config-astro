    [
      /^flex-(row|col)-(\d)$/,
      ([, direction, number]) => {
        function dd(d: 'row' | 'col'): string {
          if (d === 'row') {
            return 'row'
          } else {
            return 'column'
          }
        }
        function area(n: number): string {
          let position: string[]
          switch (n) {
            case 1:
              position = ['start', 'start']
              break
            case 2:
              position = ['center', 'start']
              break
            case 3:
              position = ['end', 'start']
              break
            case 4:
              position = ['start', 'center']
              break
            case 5:
              position = ['center', 'center']
              break
            case 6:
              position = ['end', 'center']
              break
            case 7:
              position = ['start', 'end']
              break
            case 8:
              position = ['center', 'end']
              break
            case 9:
              position = ['end', 'end']
              break

            default:
              position = []
              break
          }
          return position
        }

        let direction2 = dd(direction as 'row' | 'col')
        let number2 = area(Number(number))
        return {
          display: 'flex',
          'flex-direction': direction2,
          'justify-content': number2[0],
          'align-items': number2[1],
        }
      },
    ],
